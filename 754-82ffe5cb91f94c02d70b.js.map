{"version":3,"file":"754-82ffe5cb91f94c02d70b.js","mappings":"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","sources":["webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/rng.js","webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/regex.js","webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/stringify.js","webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/validate.js","webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/node_modules/uuid/dist/esm-browser/v4.js","webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/src/utils.ts","webpack://@snek-at/jaen-template/./node_modules/@snek-at/jaen-pages/src/containers/ui/tabs/PagesTab.tsx"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0; // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import {DynamicPaths, ResolveDynamicPaths, SitePages} from './types'\n\nexport const resolvePath = (id: string, nodes: SitePages['nodes']) => {\n  const resolve = (cId: string, path = ''): string => {\n    const node = nodes[cId]\n\n    const parentId = node.parent?.id\n    const parent = parentId && nodes[parentId]\n\n    const newPath = node.slug + '/' + path\n\n    if (parentId && parent) {\n      return resolve(parentId, newPath)\n    } else {\n      return newPath\n    }\n  }\n\n  return `/${resolve(id)}`\n}\n\nexport const resolveDynamicPath: ResolveDynamicPaths = (\n  baseId: string,\n  sitePages: SitePages\n) => {\n  const nodes = sitePages.nodes\n  const dynamicPaths: DynamicPaths = {}\n  const affectedIds: string[] = []\n  const basePath = resolvePath(baseId, nodes)\n\n  alert(`baseId: ${baseId} basePath: ${basePath}`)\n\n  const resolveNode = (id: string, prevPath = basePath) => {\n    alert(`resolve ${id} path: ${prevPath}`)\n\n    dynamicPaths[prevPath] = id\n    affectedIds.push(id)\n\n    const children = nodes[id].children\n\n    for (const child of children) {\n      const path = `${prevPath}${nodes[child.id].slug}`\n\n      resolveNode(child.id, path)\n    }\n  }\n\n  resolveNode(baseId)\n\n  return {dynamicPaths, affectedIds}\n}\n","import {Button, useDisclosure} from '@chakra-ui/react'\nimport {PageExplorer, PageExplorerProps} from '@snek-at/jaen-shared-ui'\nimport {navigate} from 'gatsby'\nimport * as React from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nimport {useAllSitePage, useCMSContext} from '../../../contexts/cms'\nimport {useAppDispatch, useAppSelector} from '../../../store'\nimport * as actions from '../../../store/actions/siteActions'\nimport {withRedux} from '../../../store/withRedux'\nimport {PageType} from '../../../types'\nimport {resolveDynamicPath} from '../../../utils'\nimport SnekFinder from '../../SnekFinder'\n\nconst transformToItems = (pages: {\n  [id: string]: PageType\n}): PageExplorerProps['items'] =>\n  Object.fromEntries(\n    Object.entries(pages).map(([id, page]) => {\n      const {title, slug, parent, children, template, pageMetadata} = page\n\n      return [\n        id,\n        {\n          data: {\n            slug: slug || page?.path?.split('/')[1] || 'root',\n            title: pageMetadata?.title || (title as string),\n            description: pageMetadata?.description || '',\n            image: pageMetadata?.image || '',\n            isBlogPost: pageMetadata?.isBlogPost || false,\n            lastPublished: pageMetadata?.datePublished,\n            locked: !template\n          },\n          children: children.map(({id}) => id),\n          parent: parent ? parent.id : null\n        }\n      ]\n    })\n  )\n\nconst PagesTab: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n\n  const cmsContext = useCMSContext()\n  const allSitePage = useAllSitePage()\n  const fileSelector = useDisclosure()\n\n  const dynamicPaths = useAppSelector(state => state.site.routing.dynamicPaths)\n\n  const templates = React.useMemo(\n    () => cmsContext.templates.map(e => e.TemplateName),\n    [cmsContext.templates]\n  )\n\n  const [fileSelectorPageId, setFileSelectorPageId] = React.useState<\n    string | null\n  >(null)\n\n  const [nextRoutingUpdate, setNextRoutingUpdate] = React.useState<\n    string | null\n  >(null)\n\n  React.useEffect(() => {\n    if (nextRoutingUpdate) {\n      const dynamicPaths = resolveDynamicPath(nextRoutingUpdate, allSitePage)\n      alert(JSON.stringify(dynamicPaths))\n\n      dispatch(actions.updateSiteRouting({dynamicPaths}))\n\n      setNextRoutingUpdate(null)\n    }\n  }, [allSitePage])\n\n  const updateRouting = (id: string) => {\n    setNextRoutingUpdate(id)\n  }\n\n  const handlePageCreate = (\n    parentId: string | null,\n    title: string,\n    slug: string,\n    template: string\n  ) => {\n    const pageId = uuidv4()\n    dispatch(\n      actions.addPage({\n        pageId,\n        page: {\n          slug,\n          template,\n          parent: parentId ? {id: parentId} : null,\n          children: [],\n          fields: {},\n          pageMetadata: {\n            title,\n            description: '',\n            image: '',\n            canonical: '',\n            isBlogPost: false\n          }\n        }\n      })\n    )\n\n    updateRouting(pageId)\n  }\n  const handlePageUpdate = (\n    id: string,\n    values: Partial<{\n      title: string\n      slug: string\n      description: string\n      image: string\n      isBlogPost: boolean\n      lastPublished?: string | undefined\n    }>\n  ) => {\n    const meta = allSitePage.nodes[id].pageMetadata\n    dispatch(\n      actions.updatePage({\n        pageId: id,\n        slug: values.slug,\n        meta: {\n          title: values.title || meta?.title,\n          description: values.description || meta?.description,\n          image: values.image || meta?.image,\n          isBlogPost: values.isBlogPost || meta?.isBlogPost,\n          datePublished: values.lastPublished || meta?.datePublished\n        }\n      })\n    )\n    updateRouting(id)\n    handleNavigate(id)\n  }\n  const handlePageDelete = (id: string) => {\n    dispatch(actions.deletePage(id))\n    updateRouting(id)\n    handleNavigate(null)\n  }\n  const handlePageMove = (pageId: string, parentPageId: string | null) => {\n    dispatch(\n      actions.movePage({\n        pageId,\n        parentPageId\n      })\n    )\n\n    updateRouting(pageId)\n    handleNavigate(pageId)\n  }\n\n  const handleItemImageClick = (pageId: string) => {\n    setFileSelectorPageId(pageId)\n\n    fileSelector.onOpen()\n  }\n\n  const handleNavigate = (pageId: string | null) => {\n    let pagePath\n    const nodes = allSitePage.nodes\n    if (pageId) {\n      pagePath = Object.keys(dynamicPaths).find(\n        key => dynamicPaths[key] === pageId\n      )\n\n      if (!pagePath) {\n        pagePath = nodes[pageId].path\n      }\n    }\n\n    const currentPath =\n      typeof window !== 'undefined' && window.location.pathname\n\n    if (currentPath !== pagePath) {\n      navigate(pagePath || '/')\n    }\n  }\n\n  // TODO: move to a loading state in order to improve performence\n  const items = React.useMemo(() => transformToItems(allSitePage.nodes), [\n    allSitePage.nodes\n  ])\n\n  return (\n    <>\n      <PageExplorer\n        items={items}\n        rootItemIds={allSitePage.rootNodeIds}\n        templates={templates}\n        onItemCreate={handlePageCreate}\n        onItemDelete={handlePageDelete}\n        onItemUpdate={handlePageUpdate}\n        onItemMove={handlePageMove}\n        onItemSelect={handleNavigate}\n        onItemImageClick={handleItemImageClick}\n      />\n      {fileSelector.isOpen && (\n        <SnekFinder\n          mode=\"selector\"\n          onSelectorClose={fileSelector.onClose}\n          onSelectorSelect={i => {\n            if (fileSelectorPageId) {\n              handlePageUpdate(fileSelectorPageId, {image: i.src})\n            }\n            setFileSelectorPageId(null)\n            fileSelector.onClose()\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withRedux(PagesTab)\n"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","arr","offset","arguments","length","undefined","toLowerCase","TypeError","options","buf","rnds","random","withRedux","dispatch","useAppDispatch","cmsContext","useCMSContext","allSitePage","useAllSitePage","fileSelector","useDisclosure","dynamicPaths","useAppSelector","state","site","routing","templates","React","map","e","TemplateName","fileSelectorPageId","setFileSelectorPageId","nextRoutingUpdate","setNextRoutingUpdate","baseId","sitePages","nodes","affectedIds","basePath","id","resolve","cId","path","node","parentId","parent","newPath","slug","resolvePath","alert","resolveNode","prevPath","children","child","resolveDynamicPath","JSON","stringify","actions","updateRouting","handlePageUpdate","values","meta","pageMetadata","pageId","title","description","image","isBlogPost","datePublished","lastPublished","handleNavigate","pagePath","Object","keys","find","key","window","location","pathname","navigate","items","pages","fromEntries","entries","page","template","data","split","locked","PageExplorer","rootItemIds","rootNodeIds","onItemCreate","uuidv4","fields","canonical","onItemDelete","onItemUpdate","onItemMove","parentPageId","onItemSelect","onItemImageClick","onOpen","isOpen","SnekFinder","mode","onSelectorClose","onClose","onSelectorSelect","src"],"sourceRoot":""}