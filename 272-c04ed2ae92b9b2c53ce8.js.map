{"version":3,"file":"272-c04ed2ae92b9b2c53ce8.js","mappings":"mNAEA,SAASA,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,IAGOS,MAAMC,KAAMR,W,6EC8B9B,GAAeS,EAAAA,EAAAA,IArCmB,WAChC,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EDWD,SAAuBC,QACd,IAAVA,IACFA,EAAQ,IAGV,IAAIC,EAASD,EACTE,EAAcD,EAAOE,QACrBC,EAAaH,EAAOI,OACpBC,EAAaL,EAAOM,OACpBC,EAASP,EAAOQ,GAEhBC,EAAkB,WAAeV,EAAMW,gBAAiB,GACxDC,GAAmB,OAAeF,EAAiB,GACnDG,EAAcD,EAAiB,GAC/BE,EAAYF,EAAiB,GAE7BG,EEpCC,SAA6BC,EAAMC,GACxC,IAAIC,OAAwBC,IAATH,EAEnB,MAAO,CAACE,EADIA,QAAgC,IAATF,EAAuBA,EAAOC,GFkCtCG,CAAoBd,EAAYO,GACvDQ,GAAwB,OAAeN,EAAsB,GAC7DG,EAAeG,EAAsB,GACrCd,EAASc,EAAsB,GAE/BZ,GAAK,QAAMD,EAAQ,cACnBL,EAAU,eAAkB,WACzBe,GACHJ,GAAU,GAGG,MAAfZ,GAA+BA,MAC9B,CAACgB,EAAchB,IACdG,EAAS,eAAkB,WACxBa,GACHJ,GAAU,GAGE,MAAdV,GAA8BA,MAC7B,CAACc,EAAcd,IACdkB,EAAW,eAAkB,YAClBf,EAASJ,EAAUE,OAE/B,CAACE,EAAQF,EAAQF,IACpB,MAAO,CACLI,SAAUA,EACVF,OAAQA,EACRF,QAASA,EACTmB,SAAUA,EACVJ,aAAcA,EACdK,eAAgB,SAAwBvB,GAKtC,YAJc,IAAVA,IACFA,EAAQ,IAGHlB,EAAS,GAAIkB,EAAO,CACzB,gBAAiB,OACjB,gBAAiBS,EACjBe,SAAS,QAAgBxB,EAAMwB,QAASF,MAG5CG,mBAAoB,SAA4BzB,GAK9C,YAJc,IAAVA,IACFA,EAAQ,IAGHlB,EAAS,GAAIkB,EAAO,CACzB0B,QAASnB,EACTE,GAAIA,MC3EWkB,GAEfC,GAAeC,EAAAA,EAAAA,MAEfC,EAAqB,SAACC,GAC1BlC,EAASmC,EAAAA,GAAuB,CAACC,KAAMF,MAOzC,OACE,0BACE,SAAC,EAAAG,SAAD,CACEH,OAAQH,EACRO,eAAgBL,EAChBM,aATmB,WACvBrC,EAAaM,YAUVN,EAAaQ,SACZ,SAAC8B,EAAA,EAAD,CACEC,KAAK,WACLC,gBAAiBxC,EAAaI,QAC9BqC,iBAAkB,SAAAtD,GAChB4C,EAAmB,CAACW,MAAOvD,EAAEwD,MAE7B3C,EAAaI","sources":["webpack://my-gatsby-site/../../node_modules/@chakra-ui/hooks/dist/esm/use-disclosure.js","webpack://my-gatsby-site/../../packages/jaen-pages/src/containers/ui/tabs/SettingsTab.tsx","webpack://my-gatsby-site/../../node_modules/@chakra-ui/hooks/dist/esm/use-controllable.js"],"sourcesContent":["import _slicedToArray from \"/workspaces/jaen/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useControllableProp } from \"./use-controllable\";\nimport { useId } from \"./use-id\";\nexport function useDisclosure(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onCloseProp = _props.onClose,\n      onOpenProp = _props.onOpen,\n      isOpenProp = _props.isOpen,\n      idProp = _props.id;\n\n  var _React$useState = React.useState(props.defaultIsOpen || false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isOpenState = _React$useState2[0],\n      setIsOpen = _React$useState2[1];\n\n  var _useControllableProp = useControllableProp(isOpenProp, isOpenState),\n      _useControllableProp2 = _slicedToArray(_useControllableProp, 2),\n      isControlled = _useControllableProp2[0],\n      isOpen = _useControllableProp2[1];\n\n  var id = useId(idProp, \"disclosure\");\n  var onClose = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    onCloseProp == null ? void 0 : onCloseProp();\n  }, [isControlled, onCloseProp]);\n  var onOpen = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    onOpenProp == null ? void 0 : onOpenProp();\n  }, [isControlled, onOpenProp]);\n  var onToggle = React.useCallback(function () {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle,\n    isControlled: isControlled,\n    getButtonProps: function getButtonProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        \"aria-expanded\": \"true\",\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        hidden: !isOpen,\n        id: id\n      });\n    }\n  };\n}","import {useDisclosure} from '@chakra-ui/hooks'\nimport {Settings} from '@snek-at/jaen-shared-ui'\nimport * as React from 'react'\n\nimport {useSiteMetadata} from '../../../contexts/cms'\nimport {useAppDispatch} from '../../../store'\nimport * as actions from '../../../store/actions/siteActions'\nimport {withRedux} from '../../../store/withRedux'\nimport SnekFinder from '../../SnekFinder'\n\nconst SettingsTab: React.FC<{}> = () => {\n  const dispatch = useAppDispatch()\n\n  const fileSelector = useDisclosure()\n\n  const siteMetadata = useSiteMetadata()\n\n  const handleValuesChange = (values: any) => {\n    dispatch(actions.updateSiteMeta({meta: values}))\n  }\n\n  const handleImageClick = () => {\n    fileSelector.onOpen()\n  }\n\n  return (\n    <>\n      <Settings\n        values={siteMetadata as any}\n        onValuesChange={handleValuesChange}\n        onImageClick={handleImageClick}\n      />\n      {fileSelector.isOpen && (\n        <SnekFinder\n          mode=\"selector\"\n          onSelectorClose={fileSelector.onClose}\n          onSelectorSelect={i => {\n            handleValuesChange({image: i.src})\n\n            fileSelector.onClose()\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withRedux(SettingsTab)\n","import _slicedToArray from \"/workspaces/jaen/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { runIfFn } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useCallbackRef } from \"./use-callback-ref\";\nexport function useControllableProp(prop, state) {\n  var isControlled = prop !== undefined;\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\n/**\n * React hook for using controlling component state.\n * @param props\n */\n\nexport function useControllableState(props) {\n  var valueProp = props.value,\n      defaultValue = props.defaultValue,\n      onChange = props.onChange,\n      _props$shouldUpdate = props.shouldUpdate,\n      shouldUpdate = _props$shouldUpdate === void 0 ? function (prev, next) {\n    return prev !== next;\n  } : _props$shouldUpdate;\n  var onChangeProp = useCallbackRef(onChange);\n  var shouldUpdateProp = useCallbackRef(shouldUpdate);\n\n  var _React$useState = React.useState(defaultValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      valueState = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var isControlled = valueProp !== undefined;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(function (next) {\n    var nextValue = runIfFn(next, value);\n\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChangeProp(nextValue);\n  }, [isControlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, updateValue];\n}"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","withRedux","dispatch","useAppDispatch","fileSelector","props","_props","onCloseProp","onClose","onOpenProp","onOpen","isOpenProp","isOpen","idProp","id","_React$useState","defaultIsOpen","_React$useState2","isOpenState","setIsOpen","_useControllableProp","prop","state","isControlled","undefined","useControllableProp","_useControllableProp2","onToggle","getButtonProps","onClick","getDisclosureProps","hidden","useDisclosure","siteMetadata","useSiteMetadata","handleValuesChange","values","actions","meta","Settings","onValuesChange","onImageClick","SnekFinder","mode","onSelectorClose","onSelectorSelect","image","src"],"sourceRoot":""}